
stages:
  - build

services:
  - docker:18-dind

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

wheel_auto:
  image: python:3.8
  stage: build
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=${CI_REGISTRY_USER} python -m twine upload --repository-url https://${CI_REPOSITORY_PYPI_URL} dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - master

wheel_adhoc:
  image: python:3.8
  stage: build
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=${CI_REGISTRY_USER} python -m twine upload --repository-url https://${CI_REPOSITORY_PYPI_URL} dist/*
  artifacts:
    paths:
      - dist/
  except:
    refs:
      - master
      - develop
  when: manual

build_auto_master:
  image: docker:18
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t ${CONTAINER_RELEASE_IMAGE} --build-arg CI_REGISTRY_USER=$CI_REGISTRY_USER --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_PROJECT_ID=$CI_PROJECT_ID --build-arg CI_REPOSITORY_PYPI_URL=$CI_REPOSITORY_PYPI_URL .
    - docker push ${CONTAINER_RELEASE_IMAGE}
  only:
    refs:
      - master

build_auto_develop:
  image: docker:18
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t ${IMAGE_TAG} --build-arg CI_REGISTRY_USER=$CI_REGISTRY_USER --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_PROJECT_ID=$CI_PROJECT_ID --build-arg CI_REPOSITORY_PYPI_URL=$CI_REPOSITORY_PYPI_URL .
    - docker push ${IMAGE_TAG}
  only:
    refs:
      - develop


build_adhoc_master:
  image: docker:18
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t ${CONTAINER_RELEASE_IMAGE} --build-arg CI_REGISTRY_USER=$CI_REGISTRY_USER --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_PROJECT_ID=$CI_PROJECT_ID --build-arg CI_REPOSITORY_PYPI_URL=$CI_REPOSITORY_PYPI_URL .
    - docker push ${CONTAINER_RELEASE_IMAGE}
  only:
    refs:
      - master
  when: manual


build_adhoc_non_master:
  image: docker:18
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t ${IMAGE_TAG} --build-arg CI_REGISTRY_USER=$CI_REGISTRY_USER --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg CI_PROJECT_ID=$CI_PROJECT_ID --build-arg CI_REPOSITORY_PYPI_URL=$CI_REPOSITORY_PYPI_URL .
    - docker push ${IMAGE_TAG}
  except:
    refs:
      - master
  when: manual
